name: JavaEE CI/CD Pipeline

on:
  push:
    branches:
      - dev 

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.36 
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: megacity_test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=jdbc:mysql://127.0.0.1:3306/megacity_test_db" >> $GITHUB_ENV
          echo "DATABASE_USER=root" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=1234" >> $GITHUB_ENV

      - name: Check SQL file existence
        run: |
          if [ ! -f src/test/resources/megacity_test_db.sql ]; then
            echo "Error: src/test/resources/megacity_test_db.sql not found!"
            exit 1
          fi

      - name: Initialize MySQL database
        run: |
          mysql -h 127.0.0.1 -u root -p1234 megacity_test_db < src/test/resources/megacity_test_db.sql 2>&1 | tee mysql_init.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "Failed to run megacity_test_db.sql. Check mysql_init.log for details:"
            cat mysql_init.log
            exit 1
          fi

      - name: Show tables in database
        run: |
          mysql -h 127.0.0.1 -u root -p1234 megacity_test_db -e "SHOW TABLES;" || { echo "Failed to show tables"; exit 1; }

      - name: Build without tests with Maven
        run: mvn clean install
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_USER: ${{ env.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/*.war
