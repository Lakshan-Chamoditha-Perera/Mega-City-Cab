name: Dev Branch CI Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B clean compile
      
    - name: Run Unit Tests
      run: mvn test
      
    - name: Generate Test Report
      run: mvn surefire-report:report
      continue-on-error: true
      
    - name: Archive test reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: |
          target/surefire-reports/
          target/site/
        if-no-files-found: warn
        
    - name: Package WAR file
      run: mvn -B package -DskipTests
      
    - name: Archive WAR file
      uses: actions/upload-artifact@v3
      with:
        name: mega-city-cab-service-dev
        path: target/*.war
        if-no-files-found: error
        
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Run SpotBugs
      run: |
        echo "Running SpotBugs static analysis..."
        mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.5:check
      continue-on-error: true
      
    - name: Run PMD
      run: |
        echo "Running PMD code analysis..."
        mvn pmd:pmd
      continue-on-error: true
      
    - name: Archive code quality reports
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-reports
        path: |
          target/spotbugs/
          target/pmd/
        if-no-files-found: ignore
  
  simulate-dev-deploy:
    name: Simulate Dev Deployment
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality]
    
    steps:
    - name: Download WAR file
      uses: actions/download-artifact@v3
      with:
        name: mega-city-cab-service-dev
        path: deploy
        
    - name: Simulate deployment to dev environment
      run: |
        echo "=== DEV DEPLOYMENT SIMULATION ==="
        echo "Deploying Mega City Cab Service to development environment"
        echo "Deployment timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
        echo "WAR file details:"
        ls -la deploy/
        echo "Version: 1.0-SNAPSHOT"
        echo "Build number: $GITHUB_RUN_NUMBER"
        echo "Commit SHA: $GITHUB_SHA"
        echo "================================================"
        echo "In a real deployment scenario, the WAR file would be deployed to a development Tomcat/WildFly server"
        echo "================================================"
        
    - name: Generate deployment report
      run: |
        mkdir -p deployment-report
        cat > deployment-report/dev-deployment.md << EOF
        # Dev Environment Deployment Report
        
        ## Deployment Details
        - **Project**: Mega City Cab Service
        - **Version**: 1.0-SNAPSHOT
        - **Build Number**: $GITHUB_RUN_NUMBER
        - **Environment**: Development
        - **Deployment Time**: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        - **GitHub Commit**: $GITHUB_SHA
        - **GitHub Workflow**: $GITHUB_WORKFLOW
        
        ## Deployment Status
        ✅ Build Successful
        ✅ Tests Executed
        ✅ Code Quality Checks Performed
        ✅ Deployment Package Created
        
        ## Next Steps
        - Manual validation of development environment
        - Integration testing
        - Prepare for promotion to staging environment
        EOF
        
    - name: Upload deployment report
      uses: actions/upload-artifact@v3
      with:
        name: dev-deployment-report
        path: deployment-report/
        if-no-files-found: error
